//1影像讀取
//•	OpenCV (cv2.imread()) 或 PIL (Image.open()) 來讀取道路影像。
import cv2
image = cv2.imread('road_image.jpg')
//這個JPG為檔案路徑 功能是讀取影像回傳一個陣列，為圖像像素的像素值
from PIL import Image
image = Image.open('road_image.jpg')
//PIL(Pillow) 是Python 中著名的影像處理套件這裡涵式用來開啟影像檔案在螢幕上
//2影像預處理
//•	灰階轉換：使用 cv2.cvtColor() 將影像轉換為灰階。
//•	高斯模糊：使用 cv2.GaussianBlur() 來減少影像中的噪音。
//•	邊緣檢測：使用 Canny 邊緣檢測 (cv2.Canny()) 找出影像中的邊界。
//3影像分割
//•	閾值化處理：使用 cv2.threshold() 進行二值化分割。
//•	形態學運算：使用 cv2.morphologyEx() 進行影像的膨脹或侵蝕操作。
//•	區域分割：可以使用洪水填充法 (cv2.floodFill()) 進行區域分割。
//4特徵提取
//•	霍夫變換直線偵測：使用 cv2.HoughLinesP() 偵測道路邊界的直線。
//•	輪廓檢測：使用 cv2.findContours() 來檢測影像中的物件或道路標記。
//5物件偵測
//•	使用 YOLO 或 SSD 等深度學習模型來進行物件偵測，例如車輛、行人等。這可以透過使用 TensorFlow 或 PyTorch 實現。
//6結果輸出
//•	使用 cv2.drawContours() 或 cv2.line() 將偵測結果繪製到原影像上。
//•	使用 cv2.imwrite() 保存處理後的影像。
//•	使用 Matplotlib 或 OpenCV (cv2.imshow()) 進行結果的可視化。
